break is a statement
in a functional programming there is not statement, we have expression

Functional pipeline offers internal iterators is less complex
easy to modify
easy to understand
BUT......
it is very important that we make the functional pipeline pure. Avoid shared mutable variables.

What is pure pipeline:
A pure function is idempotent, it returns the same result for the same input and does have any side-effects.
1. it does not change any state that is visible outside.
2. it does not depend on anything outside that may possibly change.

Functional programming relies on lazy evaluation for efficiency.
Lazy evaluation and parallel execution rely on immutability and purity of functions for correctness.
FP emphasizes immutability and purity, not because it is fashionable.
Laziness cannot be correct in the presence of impurity and mutability.